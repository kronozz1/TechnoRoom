export const Keys = [
  "Unassigned",
  "Escape",
  "Backquote",
  "Digit1",
  "Digit2",
  "Digit3",
  "Digit4",
  "Digit5",
  "Digit6",
  "Digit7",
  "Digit8",
  "Digit9",
  "Digit0",
  "Minus",
  "Equal",
  "Backspace",
  "Tab",
  "KeyQ",
  "KeyW",
  "KeyE",
  "KeyR",
  "KeyT",
  "KeyY",
  "KeyU",
  "KeyI",
  "KeyO",
  "KeyP",
  "BracketLeft",
  "BracketRight",
  "Backslash",
  "CapsLock",
  "KeyA",
  "KeyS",
  "KeyD",
  "KeyF",
  "KeyG",
  "KeyH",
  "KeyJ",
  "KeyK",
  "KeyL",
  "Semicolon",
  "Quote",
  "Enter",
  "ShiftLeft",
  "KeyZ",
  "KeyX",
  "KeyC",
  "KeyV",
  "KeyB",
  "KeyN",
  "KeyM",
  "Comma",
  "Period",
  "Slash",
  "ShiftRight",
  "ControlLeft",
  "AltLeft",
  "MetaLeft",
  "Space",
  "MetaRight",
  "AltRight",
  "ArrowLeft",
  "ArrowUp",
  "ArrowRight",
  "ArrowDown",
] as const;

export type KeyCode = typeof Keys[number];

export type KeyCodeMap = Record<KeyCode, number>;

export const KeyCodes: KeyCodeMap = Object.fromEntries(Keys.map((key, i) => [key, i])) as KeyCodeMap;

export function codeToKeyCode(code: string) {
  return KeyCodes[code as KeyCode] || 0;
}
